from django.db import models

class Dashboard(models.Model):
    pass

class Product(models.Model):
    item = models.CharField(max_length=100)
    price = models.DecimalField(max_digits=10, decimal_places=2)

class StockGlobal(models.Model):
    ingredient = models.CharField(max_length=150)
    amount = models.DecimalField(max_digits=10, decimal_places=2)
    quantity = models.DecimalField(max_digits=10, decimal_places=2)
    stock_out = models.DecimalField(max_digits=10, decimal_places=2)
    stock_in = models.DecimalField(max_digits=10, decimal_places=2)
    avg_price = models.DecimalField(max_digits=10, decimal_places=2)

class Account(models.Model):
    account = models.IntegerField()
    family = models.IntegerField()
    classe = models.IntegerField()
    Label = models.CharField(max_length=100)
    OHADA_Code = models.CharField(max_length=50)
    note = models.CharField(max_length=100)

class Agency(models.Model):
    agency = models.CharField(max_length=150)
    authorisation = models.CharField(max_length=50)

class Production(models.Model):
    date = models.DateField()
    batch_no = models.CharField(max_length=100)
    product_type = models.CharField(max_length=20)
    agency = models.CharField(max_length=100)
    product = models.CharField(max_length=150)
    ingredient = models.CharField(max_length=150)
    quantity = models.DecimalField(max_digits=10, decimal_places=2)
    amount = models.DecimalField(max_digits=10, decimal_places=2)
    stock_out = models.DecimalField(max_digits=10, decimal_places=2)
    journal = models.CharField(max_length=100)
    debit_account = models.CharField(max_length=150)
    debit_amount = models.DecimalField(max_digits=10, decimal_places=2)
    credit_account = models.CharField(max_length=150)
    credit_amount = models.DecimalField(max_digits=10, decimal_places=2)
    
class BatchProduction(models.Model):
    date = models.DateField()
    batch_no = models.CharField(max_length=100)
    agency = models.CharField(max_length=100)
    product = models.CharField(max_length=100)
    journal = models.CharField(max_length=30)
    total_amount = models.DecimalField(max_digits=10, decimal_places=2)
    total_production = models.DecimalField(max_digits=10, decimal_places=2)
    unit_material_cost = models.DecimalField(max_digits=10, decimal_places=2)
    fixed_cost = models.DecimalField(max_digits=10, decimal_places=2)
    variable_cost = models.DecimalField(max_digits=10, decimal_places=2)
    total_cost = models.DecimalField(max_digits=10, decimal_places=2)
    total_fixed_cost = models.DecimalField(max_digits=10, decimal_places=2)
    total_variable_cost = models.DecimalField(max_digits=10, decimal_places=2)
    debit_account = models.CharField(max_length=150)
    debit_amount = models.DecimalField(max_digits=10, decimal_places=2)
    credit_account = models.CharField(max_length=150)
    credit_amount = models.DecimalField(max_digits=10, decimal_places=2)

class FinishedProduction(models.Model):
    reference = models.CharField(max_length=100)
    date = models.DateField()
    agency = models.CharField(max_length=100)
    product = models.CharField(max_length=150)
    selling_price = models.DecimalField(max_digits=10, decimal_places=2)
    quantity = models.DecimalField(max_digits=10, decimal_places=2)
    total_amount = models.DecimalField(max_digits=10, decimal_places=2)
    debit_account = models.CharField(max_length=150)
    debit_amount = models.DecimalField(max_digits=10, decimal_places=2)
    credit_account = models.CharField(max_length=150)
    credit_amount = models.DecimalField(max_digits=10, decimal_places=2)
    
class Provider(models.Model):
    name_provider = models.CharField(max_length=250)

class Achat(models.Model):
    date = models.DateField()
    agency = models.CharField(max_length=100)
    department = models.CharField(max_length=50)
    ingredient = models.CharField(max_length=100)
    reference = models.CharField(max_length=100)
    provider = models.CharField(max_length=100)
    quantity = models.DecimalField(max_digits=10, decimal_places=2)
    unit_price = models.DecimalField(max_digits=10, decimal_places=2)
    amount = models.DecimalField(max_digits=10, decimal_places=2)
    payment_method = models.CharField(max_length=30)
    journal = models.CharField(max_length=30)
    initiator = models.CharField(max_length=100)
    beneficiary = models.CharField(max_length=100)
    debit_account = models.CharField(max_length=150)
    debit_amount = models.DecimalField(max_digits=10, decimal_places=2)
    credit_account = models.CharField(max_length=150)
    credit_amount = models.DecimalField(max_digits=10, decimal_places=2)
    stock_in = models.DecimalField(max_digits=10, decimal_places=2)

class Distribution(models.Model):
    date = models.DateField()
    batch_no = models.CharField(max_length=100)
    initiator = models.CharField(max_length=100)
    product = models.CharField(max_length=100)
    total_production = models.DecimalField(max_digits=10, decimal_places=2)
    stock_in = models.DecimalField(max_digits=10, decimal_places=2)
    agency = models.CharField(max_length=100)
    quantity_sold = models.DecimalField(max_digits=10, decimal_places=2)
    selling_price = models.DecimalField(max_digits=10, decimal_places=2)
    sale_value = models.DecimalField(max_digits=10, decimal_places=2)
    stock_out = models.DecimalField(max_digits=10, decimal_places=2)

class SalesControl(models.Model):
    date = models.DateField()
    agency = models.CharField(max_length=100)
    opening_balance = models.DecimalField(max_digits=10, decimal_places=2)
    sales_made= models.DecimalField(max_digits=10, decimal_places=2)
    total_due = models.DecimalField(max_digits=10, decimal_places=2)
    cash_collection = models.DecimalField(max_digits=10, decimal_places=2)
    credit_sales = models.DecimalField(max_digits=10, decimal_places=2)
    donation = models.DecimalField(max_digits=10, decimal_places=2)
    domaged_goods = models.DecimalField(max_digits=10, decimal_places=2)
    closing_stock = models.DecimalField(max_digits=10, decimal_places=2)
    total_collection = models.DecimalField(max_digits=10, decimal_places=2)
    collection_difference = models.DecimalField(max_digits=10, decimal_places=2) 

class StockFP(models.Model):
    agency = models.CharField(max_length=100)
    date = models.DateField() 
    closing_stock = models.DecimalField(max_digits=10, decimal_places=2)
    
class CashBank(models.Model):
    date = models.DateField()
    amount = models.DecimalField(max_digits=10, decimal_places=2)
    detail = models.CharField(max_length=250)
    journal = models.CharField(max_length=100)
    debit_account = models.CharField(max_length=100)
    debit_amount = models.DecimalField(max_digits=10, decimal_places=2)
    credit_account = models.CharField(max_length=100)
    credit_amount = models.DecimalField(max_digits=10, decimal_places=2)
    
class OthersRenewed(models.Model):
    date = models.DateField()
    amount = models.DecimalField(max_digits=10, decimal_places=2)
    detail = models.CharField(max_length=250)
    journal = models.CharField(max_length=100)
    debit_account = models.CharField(max_length=100)
    debit_amount = models.DecimalField(max_digits=10, decimal_places=2)
    credit_account = models.CharField(max_length=100)
    credit_amount = models.DecimalField(max_digits=10, decimal_places=2)

class ComptaFp(models.Model):
    date = models.DateField()
    agency = models.CharField(max_length=100)
    journal = models.CharField(max_length=100)
    sale_value = models.DecimalField(max_digits=10, decimal_places=2)
    debit_account = models.CharField(max_length=100)
    debit_amount = models.DecimalField(max_digits=10, decimal_places=2)
    credit_account = models.CharField(max_length=100)
    credit_amount = models.DecimalField(max_digits=10, decimal_places=2)

class ComptaPos(models.Model):
    agency = models.CharField(max_length=100)
    date = models.DateField()
    cash_collection = models.DecimalField(max_digits=10, decimal_places=2)
    domaged_goods = models.DecimalField(max_digits=10, decimal_places=2)
    donation = models.DecimalField(max_digits=10, decimal_places=2)
    total = models.DecimalField(max_digits=10, decimal_places=2)
    debit_account = models.CharField(max_length=100)
    debit_amount = models.DecimalField(max_digits=10, decimal_places=2)
    credit_account = models.CharField(max_length=100)
    credit_amount = models.DecimalField(max_digits=10, decimal_places=2)
    
class Transfer(models.Model):
    date = models.DateField()
    initiator = models.CharField(max_length=100)
    journal = models.CharField(max_length=100)
    no_bl = models.CharField(max_length=100)
    ingredient = models.CharField(max_length=100)
    quantity_issued = models.DecimalField(max_digits=10, decimal_places=2)
    amount_issue = models.DecimalField(max_digits=10, decimal_places=2)
    stock_out = models.DecimalField(max_digits=10, decimal_places=2)
    beneficiary = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    quantity_recu = models.DecimalField(max_digits=10, decimal_places=2)
    stock_in = models.DecimalField(max_digits=10, decimal_places=2)
    quantity_ecart =  models.DecimalField(max_digits=10, decimal_places=2)

class VenteMarchandises(models.Model):
    date = models.DateField()
    agency = models.CharField(max_length=100)
    customer = models.CharField(max_length=100)
    quantity  = models.DecimalField(max_digits=10, decimal_places=2)
    ingredient = models.CharField(max_length=100)
    cost_of_sales = models.DecimalField(max_digits=10, decimal_places=2)
    selling_price = models.DecimalField(max_digits=10, decimal_places=2)
    stock_out = models.DecimalField(max_digits=10, decimal_places=2)
    vante_marchandises = models.DecimalField(max_digits=10, decimal_places=2)
    marge_brute = models.DecimalField(max_digits=10, decimal_places=2)
    
class ComptaVm(models.Model):
    date = models.DateField()
    agency = models.CharField(max_length=100)
    customer = models.CharField(max_length=100)
    vante_marchandises = models.DecimalField(max_digits=10, decimal_places=2)
    debit_account = models.CharField(max_length=100)
    debit_amount = models.DecimalField(max_digits=10, decimal_places=2)
    credit_account = models.CharField(max_length=100)
    credit_amount = models.DecimalField(max_digits=10, decimal_places=2)
    
class StockAgency(models.Model):
    agency = models.CharField(max_length=100)
    ingredient = models.CharField(max_length=100)
    quantity = models.DecimalField(max_digits=10, decimal_places=2)
    stock_in = models.DecimalField(max_digits=10, decimal_places=2)
    stock_out = models.DecimalField(max_digits=10, decimal_places=2)
    last_update_date = models.DateTimeField()


class Consolidation(models.Model):
    date = models.DateField()
    agency = models.CharField(max_length=100, null=True, blank=True)
    department = models.CharField(max_length=50, null=True, blank=True)
    batch_no = models.CharField(max_length=100, null=True, blank=True)
    product_type = models.CharField(max_length=20, null=True, blank=True)
    product = models.CharField(max_length=150, null=True, blank=True)
    ingredient = models.CharField(max_length=150, null=True, blank=True)
    quantity = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    stock_in = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    stock_out = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    unit_price = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    total_amount = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    amount = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    debit_account = models.CharField(max_length=150, null=True, blank=True)
    debit_amount = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    credit_account = models.CharField(max_length=150, null=True, blank=True)
    credit_amount = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    journal = models.CharField(max_length=100, null=True, blank=True)
    reference = models.CharField(max_length=100, null=True, blank=True)
    provider = models.CharField(max_length=100, null=True, blank=True)
    beneficiary = models.CharField(max_length=100, null=True, blank=True)
    initiator = models.CharField(max_length=100, null=True, blank=True)
    customer = models.CharField(max_length=100, null=True, blank=True)
    cost_of_sales = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    selling_price = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    vante_marchandises = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    marge_brute = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    payment_method = models.CharField(max_length=30, null=True, blank=True)
    fixed_cost = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    variable_cost = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    total_cost = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    total_fixed_cost = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    total_variable_cost = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    domaged_goods = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    donation = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    total = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    opening_balance = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    sales_made = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    total_due = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    cash_collection = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    credit_sales = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    closing_stock = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    total_collection = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    collection_difference = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    no_bl = models.CharField(max_length=100, null=True, blank=True)
    quantity_issued = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    amount_issue = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    quantity_recu = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    quantity_ecart = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    detail = models.CharField(max_length=250, null=True, blank=True)


class TrialBalance(models.Model):
    date = models.DateField()
    agency = models.CharField(max_length=100)
    product = models.CharField(max_length=100)
    provider = models.CharField(max_length=100)
    customer = models.CharField(max_length=100)
    debit_account = models.CharField(max_length=100)
    debit_amount = models.DecimalField(max_digits=10, decimal_places=2)
    credit_account = models.CharField(max_length=100)
    credit_amount = models.DecimalField(max_digits=10, decimal_places=2)